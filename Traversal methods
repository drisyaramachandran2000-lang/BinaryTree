class BinaryTree {
    Node root;

    // Constructor
    BinaryTree(int value) {
        root = new Node(value);
    }

    BinaryTree() {
        root = null;
    }

    // ----- Inorder Traversal (Left, Root, Right) -----
    void inorder(Node node) {
        if (node == null)
            return;
        inorder(node.left);
        System.out.print(node.value + " ");
        inorder(node.right);
    }

    // ----- Preorder Traversal (Root, Left, Right) -----
    void preorder(Node node) {
        if (node == null)
            return;
        System.out.print(node.value + " ");
        preorder(node.left);
        preorder(node.right);
    }

    // ----- Postorder Traversal (Left, Right, Root) -----
    void postorder(Node node) {
        if (node == null)
            return;
        postorder(node.left);
        postorder(node.right);
        System.out.print(node.value + " ");
    }
}
